#!/Library/Frameworks/Python.framework/Versions/3.6/bin/python3

import sys
import os
from lib.utils.rm_color_manager import *
from lib.utils.rm_opt_manager import *
from lib.utils.rm_script_manager import *
from lib.android_properties import *
from lib.ios_properties import *
import getopt
try:
	from PIL import Image
except ImportError:
	RMColorManager.printError("Please install the PIL Module!")

optionInput = RMOption("i", "input", True, "Input Icon Value in 1024x1024")
optionOutput = RMOption("o", "output", True, "Output Folder Name")

options = [optionInput, optionOutput]
optionManager = RMOptManager(options)

def main():
	checkVersionAndArguments()
	if not (optionManager.argumentExist(optionInput) and optionManager.argumentExist(optionOutput)):
		optionManager.usage()
		sys.exit(2)
	
	if not os.path.isfile(optionManager.getArgument(optionInput)):
		RMColorManager.printError("the value for '-i' must be a file")
		sys.exit(2)
		
	if os.path.isdir(optionManager.getArgument(optionOutput)):
		RMColorManager.printError("the output folder already exists!")
		sys.exit(2)
	
	#Values	
	folderName = optionManager.getArgument(optionOutput)
	androidFolderName = folderName+"/Android"
	iosFolderName = folderName+"/iOS/"+IOSProperties.folderName

	#CreateFolders
	AndroidProperties.createFolders(androidFolderName)
	os.makedirs(iosFolderName)
	RMColorManager.printWithColor("created folders", RMColorManager.green)

	#open the image
	img = Image.open(optionManager.getArgument(optionInput))

	#Android
	for property in AndroidProperties.allProperties:
		img.resize(property.size, Image.ANTIALIAS).save(androidFolderName+"/"+property.folderName+"/"+property.fileName)
	
	RMColorManager.printWithColor("created android files", RMColorManager.green)
	
	#iOS
	for property in IOSProperties.allProperties:
		img.resize(property.scaledSize, Image.ANTIALIAS).save(iosFolderName+"/"+property.filename)
	
	IOSProperties.createContentsJson(iosFolderName)
	RMColorManager().printWithColor("created iOS files", RMColorManager.green)

def checkVersionAndArguments():
	global options, optionManager
	RMScriptManager.checkVersion((3,6), "Please use Python 3.6 or greater!")
	optionManager.checkArguments()
	
if __name__ == '__main__':
	main()
